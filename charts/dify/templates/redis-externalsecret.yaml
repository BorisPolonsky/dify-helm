{{- if and .Values.externalSecret.enabled .Values.externalSecret.redis.enabled .Values.redis.auth.enabled (not .Values.redis.auth.password) }}
{{- $redisSecretName := .Values.redis.auth.existingSecret | default (printf "%s-redis" (include "dify.fullname" .)) }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ $redisSecretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dify.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  refreshInterval: {{ .Values.externalSecret.redis.refreshInterval | default "1h" }}
  secretStoreRef:
    name: {{ .Values.externalSecret.secretStore.name }}
    kind: {{ .Values.externalSecret.secretStore.kind }}
  target:
    name: {{ $redisSecretName }}
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        {{- if index .Values.externalSecret.redis.remoteRefs "redis-password" }}
        redis-password: "{{ `{{ index . \"redis-password\" }}` }}"
        {{- end }}
  data:
    {{- if .Values.externalSecret.redis.remoteRefs }}
    {{- range $secretKey, $remoteRef := .Values.externalSecret.redis.remoteRefs }}
    - secretKey: {{ $secretKey }}
      remoteRef:
        key: {{ $remoteRef.key }}
        {{- if $remoteRef.property }}
        property: {{ $remoteRef.property }}
        {{- end }}
    {{- end }}
    {{- end }}
{{- end }}