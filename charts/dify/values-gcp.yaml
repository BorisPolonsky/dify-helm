# GCP GKE 환경을 위한 Dify 설정
# 이 파일은 Google Cloud Platform 서비스와 통합하여 프로덕션 환경에서 사용하기 위한 설정입니다.
#
# 사용법:
# helm install dify ./charts/dify -f charts/dify/values-gcp.yaml

# =============================================================================
# GCP 특화 설정
# =============================================================================

# 외부 PostgreSQL 사용 (Cloud SQL for PostgreSQL)
externalPostgres:
  enabled: true
  # Cloud SQL 인스턴스 연결 정보 예시
  address: "10.1.1.3"  # Private IP 또는 Public IP
  port: 5432
  username: "dify_admin"
  # Google Secret Manager 또는 Kubernetes Secret 사용 권장
  password: "your-secure-password"
  database:
    api: "dify"
    pluginDaemon: "dify_plugin"

# 외부 Redis 사용 (Memorystore for Redis)
externalRedis:
  enabled: true
  # Memorystore Redis 인스턴스 연결 정보 예시
  host: "10.1.1.4"  # Private IP
  port: 6379
  username: ""
  # Google Secret Manager 또는 Kubernetes Secret 사용 권장
  password: "your-redis-auth-string"  # AUTH 설정 시에만 필요
  useSSL: false  # Memorystore는 기본적으로 SSL을 지원하지 않음

# Google Cloud Storage 사용
externalGCS:
  enabled: true
  bucketName:
    api: "dify-api-storage"
    pluginDaemon: "dify-plugin-storage"
  # Service Account JSON을 base64로 인코딩한 값
  # Google Secret Manager 또는 Kubernetes Secret 사용 권장
  serviceAccountJsonBase64: "your-base64-encoded-service-account-json"

# 내장 PostgreSQL 비활성화 (Cloud SQL 사용)
postgresql:
  enabled: false

# 내장 Redis 비활성화 (Memorystore 사용)
redis:
  enabled: false

# 내장 Weaviate 사용 (또는 외부 벡터 DB 설정)
weaviate:
  enabled: true
  storage:
    size: 50Gi
    storageClassName: "pd-ssd"  # Google Cloud Persistent Disk SSD
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"

# =============================================================================
# 인그레스 설정 (GCE Ingress Controller)
# =============================================================================

ingress:
  enabled: true
  className: "gce"
  annotations:
    # GCE Ingress Controller 설정
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "dify-ip"  # 예약된 정적 IP 사용
    networking.gke.io/managed-certificates: "dify-ssl-cert"  # Google 관리형 SSL 인증서
    kubernetes.io/ingress.allow-http: "false"  # HTTPS만 허용
    cloud.google.com/neg: '{"ingress": true}'  # Network Endpoint Groups 사용
    cloud.google.com/backend-config: '{"default": "dify-backend-config"}'
  hosts:
    - host: dify.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: dify-tls
      hosts:
        - dify.yourdomain.com

# =============================================================================
# 스토리지 클래스 설정 (Google Cloud Persistent Disk)
# =============================================================================

# API 컴포넌트 설정
api:
  enabled: true
  replicas: 2
  
  # 자동 스케일링 설정
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # 리소스 설정
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  # PVC 비활성화 (Google Cloud Storage 사용)
  persistence:
    enabled: false

  # 환경 변수
  extraEnv:
    - name: CHECK_UPDATE_URL
      value: "https://updates.dify.ai"  # GCP 환경에서는 활성화
    - name: CODE_MAX_NUMBER
      value: "9223372036854775807"
    - name: CODE_MIN_NUMBER
      value: "-9223372036854775808"
    - name: CODE_MAX_STRING_LENGTH
      value: "80000"
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/var/secrets/google/key.json"  # Service Account 키 파일 경로

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux
    cloud.google.com/gke-nodepool: system-pool  # GKE 시스템 노드풀

# Worker 컴포넌트 설정
worker:
  enabled: true
  replicas: 2
  
  # 자동 스케일링 설정
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 15
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # 리소스 설정 (백그라운드 작업용으로 더 많은 리소스)
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"

  # 환경 변수
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/var/secrets/google/key.json"

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux
    cloud.google.com/gke-nodepool: worker-pool  # GKE 작업자 노드풀

# Web 컴포넌트 설정
web:
  enabled: true
  replicas: 2
  
  # 자동 스케일링 설정
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

  # 리소스 설정
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux

# Sandbox 컴포넌트 설정
sandbox:
  enabled: true
  replicas: 2
  
  # 리소스 설정
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux

# Plugin Daemon 설정
pluginDaemon:
  enabled: true
  replicas: 1
  
  # 리소스 설정
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  # PVC 비활성화 (Google Cloud Storage 사용)
  persistence:
    enabled: false

  # 마켓플레이스 설정
  marketplace:
    enabled: true
    apiProxyEnabled: true  # GCP에서는 프록시를 통한 API 호출 사용

  # 환경 변수
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/var/secrets/google/key.json"

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux

# Proxy 설정
proxy:
  enabled: true
  replicas: 2
  
  # 리소스 설정
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

  # 로그 저장용 Persistent Disk
  log:
    persistence:
      enabled: true
      storageClass: "pd-ssd"
      size: 10Gi

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux

# SSRF Proxy 설정 (GCP 환경에서는 활성화 권장)
ssrfProxy:
  enabled: true
  replicas: 1
  
  # 리소스 설정
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

  # 로그 저장용 Persistent Disk
  log:
    persistence:
      enabled: true
      storageClass: "pd-ssd"
      size: 5Gi

  # GCP 특화 설정
  nodeSelector:
    kubernetes.io/os: linux

# =============================================================================
# 글로벌 설정
# =============================================================================

# GCP Zones 지원
nodeSelector:
  kubernetes.io/os: linux

tolerations:
  # GCP Preemptible 인스턴스 사용 시 설정 예시
  # - key: "cloud.google.com/gke-preemptible"
  #   operator: "Equal"
  #   value: "true"
  #   effect: "NoSchedule"

affinity:
  # 멀티 존 배포를 위한 Anti-affinity 설정
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - dify
        topologyKey: topology.kubernetes.io/zone
    # GCP의 경우 instance 타입도 고려
    - weight: 50
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - dify
        topologyKey: kubernetes.io/hostname

# 서비스 설정
service:
  type: ClusterIP  # GCE Ingress를 통해 노출하므로 ClusterIP 사용
  port: 80
  annotations:
    # GCP Load Balancer 설정 (필요 시)
    # cloud.google.com/neg: '{"ingress": true}'
    # cloud.google.com/backend-config: '{"default": "dify-backend-config"}'

# 리소스 기본값 (개별 컴포넌트에서 오버라이드)
resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"

# =============================================================================
# GCP 특화 모니터링 및 로깅
# =============================================================================

# Google Cloud Monitoring과 통합을 위한 라벨
commonLabels:
  # Workload Identity 사용 시
  iam.gke.io/gcp-service-account: "dify-gsa@your-project.iam.gserviceaccount.com"

# GCP 환경 변수 (필요 시)
# 모든 컴포넌트에 적용될 공통 환경 변수
extraEnv:
  - name: GOOGLE_CLOUD_PROJECT
    value: "your-project-id"
  - name: GOOGLE_CLOUD_REGION
    value: "us-central1"
  # Google Secret Manager 사용 시
  # - name: GOOGLE_APPLICATION_CREDENTIALS
  #   value: "/var/secrets/google/key.json"

# =============================================================================
# GCP 네트워킹 설정
# =============================================================================

# Network Policy 설정 (GKE Dataplane V2 사용 시)
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: istio-system  # Istio 사용 시
      ports:
      - protocol: TCP
        port: 80
      - protocol: TCP
        port: 443

# Pod Security Policy 설정 (필요 시)
podSecurityPolicy:
  enabled: false  # GKE Autopilot에서는 기본적으로 비활성화

# =============================================================================
# GCP 특화 백업 설정
# =============================================================================

# Velero를 사용한 백업 설정 (선택사항)
backup:
  enabled: false
  # Google Cloud Storage 버킷
  # gcs:
  #   bucket: "dify-backup-bucket"
  #   prefix: "dify"
  #   serviceAccount: "velero@your-project.iam.gserviceaccount.com"